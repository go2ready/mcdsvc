{"version":3,"sources":["components/UserControl/demo.jpg","actions/McInfoAction.tsx","reducers/Index.tsx","reducers/McInfoReducer.tsx","StoreManager.tsx","components/WebSettingProvider.ts","components/UserControl/ConfirmPanel.tsx","components/UserControl/containers/ConfirmPanelContainer.tsx","components/UserControl/ReceiptInput.tsx","components/UserControl/containers/ReceiptInputContainer.tsx","components/UserControl/ResultPanel.tsx","components/UserControl/containers/ResultPanelContainer.tsx","components/UserControl/Popups.tsx","components/UserControl/containers/PopupsContainer.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","setFirstCode","createAction","resolve","firstCode","setSecondCode","secCode","setThirdCode","thirdCode","setAmountPound","amountPound","setAmountPence","amountPence","setRecaptcha","recaptcha","setSubmitClicked","isSubmitClicked","setOfferCode","offerCode","setShouldShowHelper","shouldShowHelper","rootReducer","combineReducers","mcinfo","state","action","undefined","type","getType","mcInfoAction","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","initialState","enhancer","applyMiddleware","apply","createStore","configureStore","WebSettingProvider","classCallCheck","this","csrfToken","ConfirmPanel","withStyles","theme","createStyles","root","width","paper","mixins","gutters","paddingTop","spacing","unit","paddingBottom","button","icon","marginRight","marginLeft","submitButtom","margin","textField","maxWidth","textFieldSmall","inline","display","_React$Component","_class","props","_this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","onChange","inherits","createClass","key","value","console","error","_this2","length","log","request","set","timeout","response","query","code1","code2","code3","then","res","body","status","offer_code","err","_this$props","classes","shouldHideButton","react","className","lib_es","sitekey","Fade_default","a","in","unmountOnExit","Button_default","variant","color","onClick","disabled","React","ConfirmPanelContainer","connect","_state$mcinfo","dispatch","ReceiptInput","inlineTypo","paddingLeft","paddingRight","verticalAlign","_temp","code1id","code2id","code3id","amountPoundid","amountPenceid","onTextChanged","onHelp","event","textid","textValue","target","setSecCode","toUpperCase","element","document","getElementById","focus","isNormalInteger","TextField_default","id","label","placeholder","inputProps","maxLength","e","required","Typography_default","gutterBottom","index_es","IconButton_default","aria-label","HelpOutline_default","str","n","Math","floor","Number","Infinity","String","ReceiptInputContainer","ResultPanel","progress","shouldShow","CircularProgress_default","ResultPanelContainer","Transition","Slide_default","assign","direction","Popups","handleClose","Dialog_default","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","src","demo","alt","DialogActions_default","PopupsContainer","library","add","faPoundSign","App","textAlign","centerRoot","_Component","react_default","createElement","Fragment","CssBaseline_default","Paper_default","elevation","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","es","App_App","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.61d9b7f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/demo.dc618c25.jpg\";","import { createAction } from 'typesafe-actions'\r\nimport { IMcInfoState } from '../types/McInfoState';\r\n\r\nexport const setFirstCode = createAction('mcinfo/SET_1ST_CODE', resolve => {\r\n  return (firstCode : string) => resolve({ firstCode } as IMcInfoState);\r\n});\r\n\r\nexport const setSecondCode = createAction('mcinfo/SET_2ND_CODE', resolve => {\r\n  return (secCode : string) => resolve({ secCode } as IMcInfoState);\r\n});\r\n\r\nexport const setThirdCode = createAction('mcinfo/SET_3RD_CODE', resolve => {\r\n  return (thirdCode : string) => resolve({ thirdCode } as IMcInfoState);\r\n});\r\n\r\nexport const setAmountPound = createAction('mcinfo/SET_POUND', resolve => {\r\n  return (amountPound : string) => resolve({ amountPound } as IMcInfoState);\r\n});\r\n\r\nexport const setAmountPence = createAction('mcinfo/SET_PENCE', resolve => {\r\n  return (amountPence : string) => resolve({ amountPence } as IMcInfoState);\r\n});\r\n\r\nexport const setRecaptcha = createAction('mcinfo/SET_RECAPTCHA', resolve => {\r\n  return (recaptcha : string) => resolve({ recaptcha } as IMcInfoState);\r\n});\r\n\r\nexport const setSubmitClicked = createAction('mcinfo/TOGGLE_SUBMIT', resolve => {\r\n  return (isSubmitClicked: boolean) => resolve({ isSubmitClicked } as IMcInfoState);\r\n});\r\n\r\nexport const setOfferCode = createAction('mcinfo/SET_OFFER_CODE', resolve => {\r\n  return (offerCode: string) => resolve({ offerCode } as IMcInfoState);\r\n});\r\n\r\nexport const setShouldShowHelper = createAction('mcinfo/SHOW_HELPER', resolve => {\r\n  return (shouldShowHelper: boolean) => resolve({ shouldShowHelper } as IMcInfoState);\r\n});","import { combineReducers } from 'redux';\r\n\r\nimport { mcInfoActionReducer } from './McInfoReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  mcinfo: mcInfoActionReducer,\r\n});","import { ActionType, getType } from 'typesafe-actions'\r\n\r\nimport * as mcInfoAction from '../actions/McInfoAction'\r\nexport type McInfoAction = ActionType<typeof mcInfoAction>\r\n\r\nimport { IMcInfoState } from '../types/McInfoState'\r\n\r\nexport function mcInfoActionReducer(state: IMcInfoState | undefined, action: McInfoAction){\r\n  if (state === undefined)\r\n  {\r\n    state = {\r\n      firstCode: '',\r\n      secCode: '',\r\n      thirdCode: '',\r\n      amountPound: '',\r\n      amountPence: '',\r\n      recaptcha: '',\r\n      isSubmitClicked: false,\r\n      offerCode: '',\r\n      shouldShowHelper: false,\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case getType(mcInfoAction.setFirstCode):\r\n      return { ...state,\r\n        firstCode: action.payload.firstCode,\r\n      };\r\n    case getType(mcInfoAction.setSecondCode):\r\n      return { ...state,\r\n        secCode: action.payload.secCode,\r\n      };\r\n    case getType(mcInfoAction.setThirdCode):\r\n      return { ...state,\r\n        thirdCode: action.payload.thirdCode,\r\n      };\r\n    case getType(mcInfoAction.setAmountPound):\r\n      return { ...state,\r\n        amountPound: action.payload.amountPound,\r\n      };\r\n    case getType(mcInfoAction.setAmountPence):\r\n      return { ...state,\r\n        amountPence: action.payload.amountPence,\r\n      };\r\n    case getType(mcInfoAction.setSubmitClicked):\r\n      return { ...state,\r\n        isSubmitClicked: action.payload.isSubmitClicked,\r\n      };\r\n    case getType(mcInfoAction.setOfferCode):\r\n      return { ...state,\r\n        offerCode: action.payload.offerCode,\r\n      };\r\n    case getType(mcInfoAction.setRecaptcha):\r\n      return { ...state,\r\n        recaptcha: action.payload.recaptcha,\r\n      };\r\n    case getType(mcInfoAction.setShouldShowHelper):\r\n      return { ...state,\r\n        shouldShowHelper: action.payload.shouldShowHelper,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport { rootReducer } from './reducers/Index';\r\n\r\ndeclare global {\r\n  interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\r\n  }\r\n}\r\n\r\nconst composeEnhancers =\r\n  (\r\n    // process.env.NODE_ENV === 'development' &&\r\n    window &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nfunction configureStore(initialState?: object) {\r\n    // configure middlewares\r\n    const middlewares : any[] = [];\r\n    // compose enhancers\r\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n    // create store\r\n    return createStore(rootReducer, initialState!, enhancer);\r\n}\r\n\r\n// pass an optional param to rehydrate state on app start\r\n// and export store singleton instance\r\nexport const store = configureStore();","export class WebSettingProvider {\r\n  public static csrfToken: string = (window as any)[\"generated_csrf_token\"];\r\n}","import * as React from 'react';\r\nimport * as request from \"superagent\";\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\nimport { WebSettingProvider } from '../WebSettingProvider';\r\n\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: { \r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  button: { /* ... */ },\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  submitButtom: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    maxWidth: '500px',\r\n  },\r\n  textFieldSmall: {\r\n    maxWidth: '100px',\r\n  },\r\n  inline: {\r\n    display: 'inline-block'\r\n  }\r\n});\r\n\r\nexport interface IConfirmPanelProps extends WithStyles<typeof styles> {\r\n  firstCode?: string;\r\n  secCode?: string;\r\n  thirdCode?: string;\r\n  amountPound?: string;\r\n  amountPence?: string;\r\n  recaptcha?: string;\r\n  isSubmitClicked?: boolean;\r\n\r\n  setSubmitClicked?: (isSubmitClicked: boolean) => void; \r\n  setOfferCode?: (offerCode: string) => void;\r\n  setRecaptcha?: (recaptcha: string) => void;\r\n}\r\n\r\nexport const ConfirmPanel = withStyles(styles)(\r\n  class extends React.Component<IConfirmPanelProps>{\r\n\r\n    constructor(props : IConfirmPanelProps) {\r\n      super(props);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    public onChange(value: string | null) {\r\n      if (typeof this.props.setRecaptcha === 'function')\r\n      {\r\n        this.props.setRecaptcha(value == null ? '' : value);\r\n      } else {\r\n        console.error('setRecaptcha function not available');\r\n      }\r\n    }\r\n\r\n    public onSubmit()\r\n    {    \r\n      if (typeof this.props.setSubmitClicked === 'function')\r\n      {\r\n        this.props.setSubmitClicked(true);\r\n      } else {\r\n        console.error('setSubmitClicked function not available');\r\n      }\r\n\r\n      if (this.props.firstCode == undefined ||\r\n        this.props.secCode == undefined ||\r\n        this.props.thirdCode == undefined ||\r\n        this.props.amountPence == undefined ||\r\n        this.props.amountPound == undefined ||\r\n        this.props.firstCode.length != 4 ||\r\n        this.props.secCode.length != 4 ||\r\n        this.props.thirdCode .length != 4 ||\r\n        this.props.amountPence == '' ||\r\n        this.props.amountPound == '')\r\n      {\r\n        return;\r\n      }\r\n\r\n      console.log(request);\r\n      request.get('/mcdfill/')\r\n      .set('X-CSRFToken', WebSettingProvider.csrfToken)\r\n      .timeout({\r\n        response: 60000,  // Wait 60 seconds for the server to start sending,\r\n      })\r\n      .query({\r\n        code1: this.props.firstCode,\r\n        code2: this.props.secCode,\r\n        code3: this.props.thirdCode,\r\n        amountPound: this.props.amountPound,\r\n        amountPence: this.props.amountPence,\r\n        recaptcha: this.props.recaptcha,\r\n      })\r\n      .then(res => {\r\n        if (res.body != null && res.status >= 200 && res.status < 300)\r\n        {\r\n          const offerCode = res.body.offer_code;\r\n          if (typeof this.props.setOfferCode === 'function')\r\n          {\r\n            this.props.setOfferCode(offerCode);\r\n          } else {\r\n            console.error('setOfferCode function not available');\r\n          }\r\n        } else {\r\n          if (typeof this.props.setSubmitClicked === 'function')\r\n          {\r\n            this.props.setSubmitClicked(false);\r\n          } else {\r\n            console.error('setSubmitClicked function not available');\r\n          }\r\n        }\r\n      }, err => {\r\n        if (err.timeout) { \r\n          if (typeof this.props.setOfferCode === 'function')\r\n          {\r\n            this.props.setOfferCode('Timed out, check your connection or try again later.');\r\n          } else {\r\n            console.error('setOfferCode function not available');\r\n          } \r\n        } else {\r\n          if (typeof this.props.setOfferCode === 'function')\r\n          {\r\n            this.props.setOfferCode('Server error, please try again later.');\r\n          } else {\r\n            console.error('setOfferCode function not available');\r\n          }  \r\n        }\r\n      });\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const { \r\n        classes,\r\n        isSubmitClicked,\r\n        recaptcha} = this.props;\r\n      \r\n      let shouldHideButton = true;\r\n      if (recaptcha)\r\n      {\r\n        shouldHideButton = false;\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <div className={classes.inline}>\r\n            <ReCAPTCHA\r\n              sitekey=\"6LenmpwUAAAAAPGXJ_Ychi6DwQSY5OHidRJF4Bb_\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Fade\r\n            in={!isSubmitClicked}\r\n            unmountOnExit={true}\r\n            timeout={500}\r\n            >\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                className={classes.submitButtom}\r\n                onClick={this.onSubmit}\r\n                disabled={shouldHideButton}>\r\n                Submit\r\n              </Button>\r\n            </Fade>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n)","import { ConfirmPanel } from '../ConfirmPanel';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\nimport { \r\n  setRecaptcha,\r\n  setOfferCode,\r\n  setSubmitClicked} from '../../../actions/McInfoAction';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { recaptcha, firstCode, secCode, thirdCode, amountPound, amountPence, isSubmitClicked }} = state;\r\n    return {\r\n      firstCode,\r\n      secCode,\r\n      thirdCode,\r\n      amountPound,\r\n      amountPence,\r\n      recaptcha,\r\n      isSubmitClicked,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n    setSubmitClicked: (isSubmitClicked: boolean) => dispatch(setSubmitClicked(isSubmitClicked)),\r\n    setOfferCode: (offerCode: string) => dispatch(setOfferCode(offerCode)),\r\n    setRecaptcha: (recaptcha: string) => dispatch(setRecaptcha(recaptcha)),\r\n  }\r\n}\r\n\r\nexport const ConfirmPanelContainer = connect(mapStateToProps, mapDispatchToProps)(ConfirmPanel);","import * as React from 'react';\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { WebSettingProvider } from '../WebSettingProvider';\r\nimport { ConfirmPanelContainer } from './containers/ConfirmPanelContainer'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: { \r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  button: { margin: theme.spacing.unit, },\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  submitButtom: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    maxWidth: '500px',\r\n  },\r\n  textFieldSmall: {\r\n    maxWidth: '100px',\r\n  },\r\n  inlineTypo: {\r\n    paddingTop: 15,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    verticalAlign: 'center',\r\n    display: 'inline-block'\r\n  },\r\n});\r\n\r\nexport interface IReceiptInputProps extends WithStyles<typeof styles> {\r\n  firstCode?: string;\r\n  secCode?: string;\r\n  thirdCode?: string;\r\n  amountPound?: string;\r\n  amountPence?: string;\r\n  isSubmitClicked?: boolean;\r\n\r\n  setFirstCode?: (firstCode: string) => void;\r\n  setSecCode?: (secCode: string) => void;\r\n  setThirdCode?: (thirdCode: string) => void;\r\n\r\n  setAmountPound?: (amountPound: string) => void;\r\n  setAmountPence?: (amountPence: string) => void;\r\n\r\n  setSubmitClicked?: (isSubmitClicked: boolean) => void; \r\n  setShouldShowHelper?: (shouldShowHelper: boolean) => void; \r\n\r\n  setOfferCode?: (offerCode: string) => void;\r\n}\r\n\r\nexport const ReceiptInput = withStyles(styles)(\r\n  class extends React.Component<IReceiptInputProps>{\r\n    \r\n    private code1id = \"text-code1\";\r\n    private code2id = \"text-code2\";\r\n    private code3id = \"text-code3\";\r\n    private amountPoundid = \"text-pound\";\r\n    private amountPenceid = \"text-pence\";\r\n    \r\n    constructor(props : IReceiptInputProps) {\r\n      super(props);\r\n      this.onTextChanged = this.onTextChanged.bind(this);\r\n      this.onHelp = this.onHelp.bind(this);\r\n    }\r\n\r\n    public onHelp() {\r\n      if (typeof this.props.setShouldShowHelper === 'function'){\r\n        this.props.setShouldShowHelper(true);\r\n      } else {\r\n        console.error('setShouldShowHelper function not available');\r\n      }\r\n    }\r\n\r\n    public onTextChanged(event: any, textid: string) : void {\r\n      const textValue : string = event.target.value;\r\n      if (typeof this.props.setFirstCode === 'function'\r\n      && typeof this.props.setSecCode === 'function'\r\n      && typeof this.props.setThirdCode === 'function'\r\n      && typeof this.props.setAmountPound === 'function'\r\n      && typeof this.props.setAmountPence === 'function'\r\n      && typeof this.props.setSubmitClicked === 'function') {\r\n        switch (textid)\r\n        {\r\n          case this.code1id:\r\n            this.props.setFirstCode(textValue.toUpperCase());\r\n            if (textValue.length >= 4)\r\n            {\r\n              const element = document.getElementById(this.code2id);\r\n              if (element != null)\r\n              {\r\n                element.focus();\r\n              }\r\n            }\r\n            break;\r\n          case this.code2id:\r\n            this.props.setSecCode(textValue.toUpperCase());\r\n            if (textValue.length >= 4)\r\n            {\r\n              const element = document.getElementById(this.code3id);\r\n              if (element != null)\r\n              {\r\n                element.focus();\r\n              }\r\n            }\r\n            break;\r\n          case this.code3id:\r\n            this.props.setThirdCode(textValue.toUpperCase());\r\n            if (textValue.length >= 4)\r\n            {\r\n              const element = document.getElementById(this.amountPoundid);\r\n              if (element != null)\r\n              {\r\n                element.focus();\r\n              }\r\n            }\r\n            break;\r\n          case this.amountPoundid:\r\n            if (this.isNormalInteger(textValue) || textValue == '')\r\n            {\r\n              this.props.setAmountPound(textValue);\r\n            }\r\n            break;\r\n          case this.amountPenceid:\r\n            if (this.isNormalInteger(textValue) || textValue == '')\r\n            {\r\n              this.props.setAmountPence(textValue);\r\n            }\r\n            break;\r\n          default:\r\n            console.error('invalid text id');\r\n        }\r\n      } else {\r\n        console.error('required function not available');\r\n      }\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const { firstCode,\r\n        secCode,\r\n        thirdCode,\r\n        amountPound,\r\n        amountPence,\r\n        classes,\r\n        isSubmitClicked} = this.props;\r\n      \r\n      return (\r\n        <div className={classes.root}>\r\n          <div>\r\n            <TextField \r\n              id={this.code1id}\r\n              label=\"Code 1\"\r\n              value={firstCode}\r\n              placeholder=\"XXXX-0000-0000\"\r\n              className={classes.textField}\r\n              inputProps={{ maxLength: 4 }}\r\n              onChange={(e) => this.onTextChanged(e, this.code1id)}\r\n              required={true}\r\n              error={firstCode == undefined || firstCode.length != 4}\r\n              />\r\n            <Typography variant=\"h5\" gutterBottom className={classes.inlineTypo}>\r\n              -\r\n            </Typography>\r\n            <TextField \r\n              id={this.code2id}\r\n              label=\"Code 2\"\r\n              value={secCode}\r\n              placeholder=\"0000-XXXX-0000\"\r\n              className={classes.textField}\r\n              inputProps={{ maxLength: 4 }}\r\n              onChange={(e) => this.onTextChanged(e, this.code2id)}\r\n              required={true}\r\n              error={secCode == undefined || secCode.length != 4}\r\n              />\r\n            <Typography variant=\"h5\" gutterBottom className={classes.inlineTypo}>\r\n              -\r\n            </Typography>\r\n            <TextField \r\n              id={this.code3id}\r\n              label=\"Code 3\"\r\n              value={thirdCode}\r\n              placeholder=\"0000-0000-XXXX\"\r\n              className={classes.textField}\r\n              inputProps={{ maxLength: 4 }}\r\n              onChange={(e) => this.onTextChanged(e, this.code3id)}\r\n              required={true}\r\n              error={thirdCode == undefined || thirdCode.length != 4}\r\n              />\r\n          </div>\r\n          <div>\r\n            <FontAwesomeIcon icon='pound-sign' className={classes.icon} />\r\n            <TextField \r\n              id={this.amountPoundid}\r\n              label=\"Pound\"\r\n              value={amountPound}\r\n              placeholder=\"XX\"\r\n              className={classes.textFieldSmall}\r\n              onChange={(e) => this.onTextChanged(e, this.amountPoundid)}\r\n              required={true}\r\n              error={amountPound == ''}\r\n              />\r\n            <Typography variant=\"h5\" gutterBottom className={classes.inlineTypo}>\r\n              .\r\n            </Typography>\r\n            <TextField \r\n              id={this.amountPenceid}\r\n              label=\"Pence\"\r\n              value={amountPence}\r\n              placeholder=\"XX\"\r\n              className={classes.textFieldSmall}\r\n              onChange={(e) => this.onTextChanged(e, this.amountPenceid)}\r\n              required={true}\r\n              error={amountPound == ''}\r\n              />\r\n            <IconButton color=\"primary\" className={classes.button} aria-label=\"Where can I find these?\" onClick={this.onHelp}>\r\n              <HelpOutlineIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n            <ConfirmPanelContainer />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    private isNormalInteger(str: string) {\r\n      var n = Math.floor(Number(str));\r\n      return n !== Infinity && String(n) === str && n >= 0;\r\n    }\r\n  }\r\n);","import { ReceiptInput } from '../ReceiptInput';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\nimport { setOfferCode, \r\n  setFirstCode, \r\n  setSecondCode, \r\n  setThirdCode, \r\n  setAmountPound,\r\n  setAmountPence,\r\n  setSubmitClicked,\r\n  setShouldShowHelper} from '../../../actions/McInfoAction';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { shouldShowHelper, firstCode, secCode, thirdCode, amountPound, amountPence, isSubmitClicked }} = state;\r\n    return {\r\n      firstCode,\r\n      secCode,\r\n      thirdCode,\r\n      amountPound,\r\n      amountPence,\r\n      isSubmitClicked,\r\n      shouldShowHelper,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n    setFirstCode: (firstCode : string) => dispatch(setFirstCode(firstCode)),\r\n    setSecCode: (secCode : string) => dispatch(setSecondCode(secCode)),\r\n    setThirdCode: (thirdCode : string) => dispatch(setThirdCode(thirdCode)),\r\n    setAmountPound: (amountPound : string) => dispatch(setAmountPound(amountPound)),\r\n    setAmountPence: (amountPence : string) => dispatch(setAmountPence(amountPence)),\r\n    setSubmitClicked: (isSubmitClicked: boolean) => dispatch(setSubmitClicked(isSubmitClicked)),\r\n    setOfferCode: (offerCode: string) => dispatch(setOfferCode(offerCode)),\r\n    setShouldShowHelper: (shouldShowHelper: boolean) => dispatch(setShouldShowHelper(shouldShowHelper)),\r\n  }\r\n}\r\n\r\nexport const ReceiptInputContainer = connect(mapStateToProps, mapDispatchToProps)(ReceiptInput);","import * as React from 'react';\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\n\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nexport interface IResultPanelProps extends WithStyles<typeof styles> {\r\n  offerCode?: string;\r\n  isSubmitClicked?: boolean;\r\n}\r\n\r\nexport const ResultPanel = withStyles(styles)(\r\n  class extends React.Component<IResultPanelProps> {\r\n    constructor(props : IResultPanelProps) {\r\n      super(props);\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const { offerCode,\r\n        isSubmitClicked,\r\n        classes } = this.props;\r\n      \r\n      let shouldShow = false;\r\n      if (isSubmitClicked != undefined)\r\n      {\r\n        shouldShow = isSubmitClicked;\r\n      }\r\n\r\n      return (\r\n        <Fade\r\n        in={shouldShow}\r\n        unmountOnExit={true}\r\n        timeout={500}\r\n        >\r\n          <div>\r\n            <Fade\r\n            in={offerCode == ''}\r\n            unmountOnExit={true}\r\n            timeout={300}\r\n            >\r\n              <div>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  I am filling it out for you, this can take up to 1 minute, please be patient...\r\n                </Typography>\r\n                <CircularProgress className={classes.progress} color=\"secondary\" />\r\n              </div>\r\n            </Fade>\r\n            <Fade\r\n            in={offerCode != ''}\r\n            unmountOnExit={true}\r\n            timeout={300}\r\n            >\r\n              <Typography variant=\"h3\" gutterBottom>\r\n                {offerCode}\r\n              </Typography>\r\n            </Fade>\r\n          </div>\r\n        </Fade>\r\n      );\r\n    }\r\n  }\r\n)","import { ResultPanel } from '../ResultPanel';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { offerCode, isSubmitClicked }} = state;\r\n    return {\r\n      offerCode,\r\n      isSubmitClicked,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n  }\r\n}\r\n\r\nexport const ResultPanelContainer = connect(mapStateToProps, mapDispatchToProps)(ResultPanel);","import * as React from 'react';\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport demo from './demo.jpg';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport interface IPopupsProps extends WithStyles<typeof styles> {\r\n  shouldShowHelper?: boolean;\r\n\r\n  setShouldShowHelper?: (shouldShowHelper: boolean) => void; \r\n}\r\n\r\nfunction Transition(props : any) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport const Popups = withStyles(styles)(\r\n  class extends React.Component<IPopupsProps>{\r\n    constructor(props : IPopupsProps) {\r\n      super(props);\r\n      this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    public handleClose(){\r\n      if (typeof this.props.setShouldShowHelper === 'function'){\r\n        this.props.setShouldShowHelper(false);\r\n      } else {\r\n        console.error('setShouldShowHelper function not available');\r\n      }\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const {\r\n        classes,\r\n        shouldShowHelper} = this.props;\r\n\r\n      let shouldShow = false;\r\n      if (shouldShowHelper)\r\n      {\r\n        shouldShow = shouldShowHelper;\r\n      }\r\n\r\n      return (\r\n        <Dialog\r\n          open={shouldShow}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"Where can I find these code?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              Please input these code and the amount you spent according to what is shown on your receipt,\r\n              as demostrated below.\r\n            </DialogContentText>\r\n            <img src={demo} alt=\"demo\" />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      );\r\n    }\r\n  }\r\n)","import { Popups } from '../Popups';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\n\r\nimport { setShouldShowHelper} from '../../../actions/McInfoAction';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { shouldShowHelper, }} = state;\r\n    return {\r\n      shouldShowHelper,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n    setShouldShowHelper: (shouldShowHelper: boolean) => dispatch(setShouldShowHelper(shouldShowHelper)),\r\n  }\r\n}\r\n\r\nexport const PopupsContainer = connect(mapStateToProps, mapDispatchToProps)(Popups);","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\n\nimport logo from './logo.svg';\n\nimport './App.css';\n\nimport { ReceiptInputContainer } from './components/UserControl/containers/ReceiptInputContainer';\nimport { ResultPanelContainer } from './components/UserControl/containers/ResultPanelContainer';\nimport { PopupsContainer } from './components/UserControl/containers/PopupsContainer';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPoundSign } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faPoundSign)\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  centerRoot: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    textAlign: 'center',\n    maxWidth: '500px',\n  },\n});\n\nexport interface IAppProps extends WithStyles<typeof styles> {\n}\n\nexport const App = withStyles(styles)(\n  class App extends Component<IAppProps> {\n    constructor(props : IAppProps) {\n      super(props);\n    }\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          {\n            <Paper className={classes.root} elevation={1}>\n              <PopupsContainer />\n              <ReceiptInputContainer />\n              <ResultPanelContainer />\n              <Typography variant=\"h6\" gutterBottom color='secondary'>\n                By clicking submit, you will agree the following:\n              </Typography>\n              <Typography variant=\"subtitle2\" gutterBottom color='primary'>\n                You agree that you are fully satisfied with your visit to Mcdonalds™, which this service will be filling the survery with the assumption as such.\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                THE SERVICE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SERVICE OR THE USE OR OTHER DEALINGS IN THE SERVICE.\n              </Typography>\n            </Paper> \n          }\n        </React.Fragment>\n      );\n    }\n\n  }\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './StoreManager';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App}  from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}