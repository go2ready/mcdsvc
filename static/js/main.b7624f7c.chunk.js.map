{"version":3,"sources":["actions/McInfoAction.tsx","reducers/Index.tsx","reducers/McInfoReducer.tsx","StoreManager.tsx","components/WebSettingProvider.ts","components/UserControl/ConfirmPanel.tsx","components/UserControl/containers/ConfirmPanelContainer.tsx","components/UserControl/ReceiptInput.tsx","components/UserControl/containers/ReceiptInputContainer.tsx","components/UserControl/ResultPanel.tsx","components/UserControl/containers/ResultPanelContainer.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["setFirstCode","createAction","resolve","firstCode","setSecondCode","secCode","setThirdCode","thirdCode","setAmountPound","amountPound","setAmountPence","amountPence","setRecaptcha","recaptcha","setSubmitClicked","isSubmitClicked","setOfferCode","offerCode","rootReducer","combineReducers","mcinfo","state","action","undefined","type","getType","mcInfoAction","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","initialState","enhancer","applyMiddleware","apply","createStore","configureStore","WebSettingProvider","classCallCheck","this","csrfToken","ConfirmPanel","withStyles","theme","createStyles","root","width","paper","mixins","gutters","paddingTop","spacing","unit","paddingBottom","button","icon","marginRight","marginLeft","submitButtom","margin","textField","maxWidth","textFieldSmall","inline","display","_React$Component","_class","props","_this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","onChange","inherits","createClass","key","value","console","error","_onSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","_this2","wrap","_context","prev","next","log","request","set","timeout","response","query","code1","code2","code3","then","res","body","status","offer_code","stop","arguments","_this$props","classes","shouldHideButton","react","className","lib_es","sitekey","Fade_default","in","unmountOnExit","Button_default","variant","color","onClick","disabled","React","ConfirmPanelContainer","connect","_state$mcinfo","dispatch","ReceiptInput","inlineTypo","paddingLeft","paddingRight","verticalAlign","_temp","code1id","code2id","code3id","amountPoundid","amountPenceid","onTextChanged","event","textid","textValue","target","setSecCode","length","element","document","getElementById","focus","isNormalInteger","TextField_default","id","label","placeholder","inputProps","maxLength","e","Typography_default","gutterBottom","index_es","str","n","Math","floor","Number","Infinity","String","ReceiptInputContainer","ResultPanel","progress","shouldShow","CircularProgress_default","ResultPanelContainer","library","add","faPoundSign","App","textAlign","centerRoot","_Component","react_default","createElement","Fragment","CssBaseline_default","Paper_default","elevation","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","es","App_App","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b7624f7c.chunk.js","sourcesContent":["import { createAction } from 'typesafe-actions'\r\nimport { IMcInfoState } from '../types/McInfoState';\r\n\r\nexport const setFirstCode = createAction('mcinfo/SET_1ST_CODE', resolve => {\r\n  return (firstCode : string) => resolve({ firstCode } as IMcInfoState);\r\n});\r\n\r\nexport const setSecondCode = createAction('mcinfo/SET_2ND_CODE', resolve => {\r\n  return (secCode : string) => resolve({ secCode } as IMcInfoState);\r\n});\r\n\r\nexport const setThirdCode = createAction('mcinfo/SET_3RD_CODE', resolve => {\r\n  return (thirdCode : string) => resolve({ thirdCode } as IMcInfoState);\r\n});\r\n\r\nexport const setAmountPound = createAction('mcinfo/SET_POUND', resolve => {\r\n  return (amountPound : string) => resolve({ amountPound } as IMcInfoState);\r\n});\r\n\r\nexport const setAmountPence = createAction('mcinfo/SET_PENCE', resolve => {\r\n  return (amountPence : string) => resolve({ amountPence } as IMcInfoState);\r\n});\r\n\r\nexport const setRecaptcha = createAction('mcinfo/SET_RECAPTCHA', resolve => {\r\n  return (recaptcha : string) => resolve({ recaptcha } as IMcInfoState);\r\n});\r\n\r\nexport const setSubmitClicked = createAction('mcinfo/TOGGLE_SUBMIT', resolve => {\r\n  return (isSubmitClicked: boolean) => resolve({ isSubmitClicked } as IMcInfoState);\r\n});\r\n\r\nexport const setOfferCode = createAction('mcinfo/SET_OFFER_CODE', resolve => {\r\n  return (offerCode: string) => resolve({ offerCode } as IMcInfoState);\r\n});","import { combineReducers } from 'redux';\r\n\r\nimport { mcInfoActionReducer } from './McInfoReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  mcinfo: mcInfoActionReducer,\r\n});","import { ActionType, getType } from 'typesafe-actions'\r\n\r\nimport * as mcInfoAction from '../actions/McInfoAction'\r\nexport type McInfoAction = ActionType<typeof mcInfoAction>\r\n\r\nimport { IMcInfoState } from '../types/McInfoState'\r\n\r\nexport function mcInfoActionReducer(state: IMcInfoState | undefined, action: McInfoAction){\r\n  if (state === undefined)\r\n  {\r\n    state = {\r\n      firstCode: '',\r\n      secCode: '',\r\n      thirdCode: '',\r\n      amountPound: '',\r\n      amountPence: '',\r\n      recaptcha: '',\r\n      isSubmitClicked: false,\r\n      offerCode: '',\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case getType(mcInfoAction.setFirstCode):\r\n      return { ...state,\r\n        firstCode: action.payload.firstCode,\r\n      };\r\n    case getType(mcInfoAction.setSecondCode):\r\n      return { ...state,\r\n        secCode: action.payload.secCode,\r\n      };\r\n    case getType(mcInfoAction.setThirdCode):\r\n      return { ...state,\r\n        thirdCode: action.payload.thirdCode,\r\n      };\r\n    case getType(mcInfoAction.setAmountPound):\r\n      return { ...state,\r\n        amountPound: action.payload.amountPound,\r\n      };\r\n    case getType(mcInfoAction.setAmountPence):\r\n      return { ...state,\r\n        amountPence: action.payload.amountPence,\r\n      };\r\n    case getType(mcInfoAction.setSubmitClicked):\r\n      return { ...state,\r\n        isSubmitClicked: action.payload.isSubmitClicked,\r\n      };\r\n    case getType(mcInfoAction.setOfferCode):\r\n      return { ...state,\r\n        offerCode: action.payload.offerCode,\r\n      };\r\n    case getType(mcInfoAction.setRecaptcha):\r\n      return { ...state,\r\n        recaptcha: action.payload.recaptcha,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport { rootReducer } from './reducers/Index';\r\n\r\ndeclare global {\r\n  interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\r\n  }\r\n}\r\n\r\nconst composeEnhancers =\r\n  (\r\n    // process.env.NODE_ENV === 'development' &&\r\n    window &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nfunction configureStore(initialState?: object) {\r\n    // configure middlewares\r\n    const middlewares : any[] = [];\r\n    // compose enhancers\r\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n    // create store\r\n    return createStore(rootReducer, initialState!, enhancer);\r\n}\r\n\r\n// pass an optional param to rehydrate state on app start\r\n// and export store singleton instance\r\nexport const store = configureStore();","export class WebSettingProvider {\r\n  public static csrfToken: string = (window as any)[\"generated_csrf_token\"];\r\n}","import * as React from 'react';\r\nimport * as request from \"superagent\";\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\nimport { WebSettingProvider } from '../WebSettingProvider';\r\n\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: { \r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  button: { /* ... */ },\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  submitButtom: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    maxWidth: '500px',\r\n  },\r\n  textFieldSmall: {\r\n    maxWidth: '100px',\r\n  },\r\n  inline: {\r\n    display: 'inline-block'\r\n  }\r\n});\r\n\r\nexport interface IConfirmPanelProps extends WithStyles<typeof styles> {\r\n  firstCode?: string;\r\n  secCode?: string;\r\n  thirdCode?: string;\r\n  amountPound?: string;\r\n  amountPence?: string;\r\n  recaptcha?: string;\r\n  isSubmitClicked?: boolean;\r\n\r\n  setSubmitClicked?: (isSubmitClicked: boolean) => void; \r\n  setOfferCode?: (offerCode: string) => void;\r\n  setRecaptcha?: (recaptcha: string) => void;\r\n}\r\n\r\nexport const ConfirmPanel = withStyles(styles)(\r\n  class extends React.Component<IConfirmPanelProps>{\r\n\r\n    constructor(props : IConfirmPanelProps) {\r\n      super(props);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    public onChange(value: string | null) {\r\n      if (typeof this.props.setRecaptcha === 'function')\r\n      {\r\n        this.props.setRecaptcha(value == null ? '' : value);\r\n      } else {\r\n        console.error('setRecaptcha function not available');\r\n      }\r\n    }\r\n\r\n    public async onSubmit()\r\n    {    \r\n      if (typeof this.props.setSubmitClicked === 'function')\r\n      {\r\n        this.props.setSubmitClicked(true);\r\n      } else {\r\n        console.error('setSubmitClicked function not available');\r\n      }\r\n\r\n      console.log(request);\r\n      request.get('/mcdfill/')\r\n      .set('X-CSRFToken', WebSettingProvider.csrfToken)\r\n      .timeout({\r\n        response: 20000,  // Wait 20 seconds for the server to start sending,\r\n      })\r\n      .query({\r\n        code1: this.props.firstCode,\r\n        code2: this.props.secCode,\r\n        code3: this.props.thirdCode,\r\n        amountPound: this.props.amountPound,\r\n        amountPence: this.props.amountPence,\r\n        recaptcha: this.props.recaptcha,\r\n      })\r\n      .then(res => {\r\n        if (res.body != null && res.status >= 200 && res.status < 300)\r\n        {\r\n          const offerCode = res.body.offer_code;\r\n          if (typeof this.props.setOfferCode === 'function')\r\n          {\r\n            this.props.setOfferCode(offerCode);\r\n          } else {\r\n            console.error('setOfferCode function not available');\r\n          }\r\n        } else {\r\n          if (typeof this.props.setSubmitClicked === 'function')\r\n          {\r\n            this.props.setSubmitClicked(false);\r\n          } else {\r\n            console.error('setSubmitClicked function not available');\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const { \r\n        classes,\r\n        isSubmitClicked,\r\n        recaptcha} = this.props;\r\n      \r\n      let shouldHideButton = true;\r\n      if (recaptcha)\r\n      {\r\n        shouldHideButton = false;\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <div className={classes.inline}>\r\n            <ReCAPTCHA\r\n              sitekey=\"6LenmpwUAAAAAPGXJ_Ychi6DwQSY5OHidRJF4Bb_\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Fade\r\n            in={!isSubmitClicked}\r\n            unmountOnExit={true}\r\n            timeout={500}\r\n            >\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                className={classes.submitButtom}\r\n                onClick={this.onSubmit}\r\n                disabled={shouldHideButton}>\r\n                Submit\r\n              </Button>\r\n            </Fade>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n)","import { ConfirmPanel } from '../ConfirmPanel';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\nimport { \r\n  setRecaptcha,\r\n  setOfferCode,\r\n  setSubmitClicked} from '../../../actions/McInfoAction';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { recaptcha, firstCode, secCode, thirdCode, amountPound, amountPence, isSubmitClicked }} = state;\r\n    return {\r\n      firstCode,\r\n      secCode,\r\n      thirdCode,\r\n      amountPound,\r\n      amountPence,\r\n      recaptcha,\r\n      isSubmitClicked,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n    setSubmitClicked: (isSubmitClicked: boolean) => dispatch(setSubmitClicked(isSubmitClicked)),\r\n    setOfferCode: (offerCode: string) => dispatch(setOfferCode(offerCode)),\r\n    setRecaptcha: (recaptcha: string) => dispatch(setRecaptcha(recaptcha)),\r\n  }\r\n}\r\n\r\nexport const ConfirmPanelContainer = connect(mapStateToProps, mapDispatchToProps)(ConfirmPanel);","import * as React from 'react';\r\nimport * as request from \"superagent\";\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { WebSettingProvider } from '../WebSettingProvider';\r\nimport { ConfirmPanelContainer } from './containers/ConfirmPanelContainer'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: { \r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  button: { /* ... */ },\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  submitButtom: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    maxWidth: '500px',\r\n  },\r\n  textFieldSmall: {\r\n    maxWidth: '100px',\r\n  },\r\n  inlineTypo: {\r\n    paddingTop: 15,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    verticalAlign: 'center',\r\n    display: 'inline-block'\r\n  }\r\n});\r\n\r\nexport interface IReceiptInputProps extends WithStyles<typeof styles> {\r\n  firstCode?: string;\r\n  secCode?: string;\r\n  thirdCode?: string;\r\n  amountPound?: string;\r\n  amountPence?: string;\r\n  isSubmitClicked?: boolean;\r\n\r\n  setFirstCode?: (firstCode: string) => void;\r\n  setSecCode?: (secCode: string) => void;\r\n  setThirdCode?: (thirdCode: string) => void;\r\n\r\n  setAmountPound?: (amountPound: string) => void;\r\n  setAmountPence?: (amountPence: string) => void;\r\n\r\n  setSubmitClicked?: (isSubmitClicked: boolean) => void; \r\n\r\n  setOfferCode?: (offerCode: string) => void;\r\n}\r\n\r\nexport const ReceiptInput = withStyles(styles)(\r\n  class extends React.Component<IReceiptInputProps>{\r\n    \r\n    private code1id = \"text-code1\";\r\n    private code2id = \"text-code2\";\r\n    private code3id = \"text-code3\";\r\n    private amountPoundid = \"text-pound\";\r\n    private amountPenceid = \"text-pence\";\r\n    \r\n    constructor(props : IReceiptInputProps) {\r\n      super(props);\r\n      this.onTextChanged = this.onTextChanged.bind(this);\r\n    }\r\n\r\n    public onTextChanged(event: any, textid: string) : void {\r\n      const textValue : string = event.target.value;\r\n      if (typeof this.props.setFirstCode === 'function'\r\n      && typeof this.props.setSecCode === 'function'\r\n      && typeof this.props.setThirdCode === 'function'\r\n      && typeof this.props.setAmountPound === 'function'\r\n      && typeof this.props.setAmountPence === 'function'\r\n      && typeof this.props.setSubmitClicked === 'function') {\r\n        switch (textid)\r\n        {\r\n          case this.code1id:\r\n            this.props.setFirstCode(textValue);\r\n            if (textValue.length >= 4)\r\n            {\r\n              const element = document.getElementById(this.code2id);\r\n              if (element != null)\r\n              {\r\n                element.focus();\r\n              }\r\n            }\r\n            break;\r\n          case this.code2id:\r\n            this.props.setSecCode(textValue);\r\n            if (textValue.length >= 4)\r\n            {\r\n              const element = document.getElementById(this.code3id);\r\n              if (element != null)\r\n              {\r\n                element.focus();\r\n              }\r\n            }\r\n            break;\r\n          case this.code3id:\r\n            this.props.setThirdCode(textValue);\r\n            if (textValue.length >= 4)\r\n            {\r\n              const element = document.getElementById(this.amountPoundid);\r\n              if (element != null)\r\n              {\r\n                element.focus();\r\n              }\r\n            }\r\n            break;\r\n          case this.amountPoundid:\r\n            if (this.isNormalInteger(textValue) || textValue == '')\r\n            {\r\n              this.props.setAmountPound(textValue);\r\n            }\r\n            break;\r\n          case this.amountPenceid:\r\n            if (this.isNormalInteger(textValue) || textValue == '')\r\n            {\r\n              this.props.setAmountPence(textValue);\r\n            }\r\n            break;\r\n          default:\r\n            console.error('invalid text id');\r\n        }\r\n      } else {\r\n        console.error('required function not available');\r\n      }\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const { firstCode,\r\n        secCode,\r\n        thirdCode,\r\n        amountPound,\r\n        amountPence,\r\n        classes,\r\n        isSubmitClicked} = this.props;\r\n      \r\n      return (\r\n        <div className={classes.root}>\r\n          <div>\r\n            <TextField \r\n              id={this.code1id}\r\n              label=\"Code 1\"\r\n              value={firstCode}\r\n              placeholder=\"XXXX-0000-0000\"\r\n              className={classes.textField}\r\n              inputProps={{ maxLength: 4 }}\r\n              onChange={(e) => this.onTextChanged(e, this.code1id)}\r\n              />\r\n            <Typography variant=\"h5\" gutterBottom className={classes.inlineTypo}>\r\n              -\r\n            </Typography>\r\n            <TextField \r\n              id={this.code2id}\r\n              label=\"Code 2\"\r\n              value={secCode}\r\n              placeholder=\"0000-XXXX-0000\"\r\n              className={classes.textField}\r\n              inputProps={{ maxLength: 4 }}\r\n              onChange={(e) => this.onTextChanged(e, this.code2id)}\r\n              />\r\n            <Typography variant=\"h5\" gutterBottom className={classes.inlineTypo}>\r\n              -\r\n            </Typography>\r\n            <TextField \r\n              id={this.code3id}\r\n              label=\"Code 3\"\r\n              value={thirdCode}\r\n              placeholder=\"0000-0000-XXXX\"\r\n              className={classes.textField}\r\n              inputProps={{ maxLength: 4 }}\r\n              onChange={(e) => this.onTextChanged(e, this.code3id)}\r\n              />\r\n          </div>\r\n          <div>\r\n            <FontAwesomeIcon icon='pound-sign' className={classes.icon} />\r\n            <TextField \r\n              id={this.amountPoundid}\r\n              label=\"Pound\"\r\n              value={amountPound}\r\n              placeholder=\"XX\"\r\n              className={classes.textFieldSmall}\r\n              onChange={(e) => this.onTextChanged(e, this.amountPoundid)}\r\n              />\r\n            <Typography variant=\"h5\" gutterBottom className={classes.inlineTypo}>\r\n              .\r\n            </Typography>\r\n            <TextField \r\n              id={this.amountPenceid}\r\n              label=\"Pence\"\r\n              value={amountPence}\r\n              placeholder=\"XX\"\r\n              className={classes.textFieldSmall}\r\n              onChange={(e) => this.onTextChanged(e, this.amountPenceid)}\r\n              />\r\n          </div>\r\n          <div>\r\n            <ConfirmPanelContainer />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    private isNormalInteger(str: string) {\r\n      var n = Math.floor(Number(str));\r\n      return n !== Infinity && String(n) === str && n >= 0;\r\n    }\r\n  }\r\n);","import { ReceiptInput } from '../ReceiptInput';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\nimport { setOfferCode, \r\n  setFirstCode, \r\n  setSecondCode, \r\n  setThirdCode, \r\n  setAmountPound,\r\n  setAmountPence,\r\n  setSubmitClicked} from '../../../actions/McInfoAction';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { firstCode, secCode, thirdCode, amountPound, amountPence, isSubmitClicked }} = state;\r\n    return {\r\n      firstCode,\r\n      secCode,\r\n      thirdCode,\r\n      amountPound,\r\n      amountPence,\r\n      isSubmitClicked,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n    setFirstCode: (firstCode : string) => dispatch(setFirstCode(firstCode)),\r\n    setSecCode: (secCode : string) => dispatch(setSecondCode(secCode)),\r\n    setThirdCode: (thirdCode : string) => dispatch(setThirdCode(thirdCode)),\r\n    setAmountPound: (amountPound : string) => dispatch(setAmountPound(amountPound)),\r\n    setAmountPence: (amountPence : string) => dispatch(setAmountPence(amountPence)),\r\n    setSubmitClicked: (isSubmitClicked: boolean) => dispatch(setSubmitClicked(isSubmitClicked)),\r\n    setOfferCode: (offerCode: string) => dispatch(setOfferCode(offerCode)),\r\n  }\r\n}\r\n\r\nexport const ReceiptInputContainer = connect(mapStateToProps, mapDispatchToProps)(ReceiptInput);","import * as React from 'react';\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\n\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nexport interface IResultPanelProps extends WithStyles<typeof styles> {\r\n  offerCode?: string;\r\n  isSubmitClicked?: boolean;\r\n}\r\n\r\nexport const ResultPanel = withStyles(styles)(\r\n  class extends React.Component<IResultPanelProps> {\r\n    constructor(props : IResultPanelProps) {\r\n      super(props);\r\n    }\r\n\r\n    public render() : JSX.Element {\r\n      const { offerCode,\r\n        isSubmitClicked,\r\n        classes } = this.props;\r\n      \r\n      let shouldShow = false;\r\n      if (isSubmitClicked != undefined)\r\n      {\r\n        shouldShow = isSubmitClicked;\r\n      }\r\n\r\n      return (\r\n        <Fade\r\n        in={shouldShow}\r\n        unmountOnExit={true}\r\n        timeout={500}\r\n        >\r\n          <div>\r\n            <Fade\r\n            in={offerCode == ''}\r\n            unmountOnExit={true}\r\n            timeout={300}\r\n            >\r\n              <div>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  I am filling it out for you, this can take up to 1 minute, please be patient...\r\n                </Typography>\r\n                <CircularProgress className={classes.progress} color=\"secondary\" />\r\n              </div>\r\n            </Fade>\r\n            <Fade\r\n            in={offerCode != ''}\r\n            unmountOnExit={true}\r\n            timeout={300}\r\n            >\r\n              <Typography variant=\"h2\" gutterBottom>\r\n                {offerCode}\r\n              </Typography>\r\n            </Fade>\r\n          </div>\r\n        </Fade>\r\n      );\r\n    }\r\n  }\r\n)","import { ResultPanel } from '../ResultPanel';\r\nimport { RootState } from '../../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { McInfoAction } from '../../../reducers/McInfoReducer';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { mcinfo: { offerCode, isSubmitClicked }} = state;\r\n    return {\r\n      offerCode,\r\n      isSubmitClicked,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<McInfoAction>) {\r\n  return {\r\n  }\r\n}\r\n\r\nexport const ResultPanelContainer = connect(mapStateToProps, mapDispatchToProps)(ResultPanel);","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\n\nimport logo from './logo.svg';\n\nimport './App.css';\n\nimport { ReceiptInputContainer } from './components/UserControl/containers/ReceiptInputContainer';\nimport { ResultPanelContainer } from './components/UserControl/containers/ResultPanelContainer';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPoundSign } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faPoundSign)\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  centerRoot: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    textAlign: 'center',\n    maxWidth: '500px',\n  },\n});\n\nexport interface IAppProps extends WithStyles<typeof styles> {\n}\n\nexport const App = withStyles(styles)(\n  class App extends Component<IAppProps> {\n    constructor(props : IAppProps) {\n      super(props);\n    }\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          {\n            <Paper className={classes.root} elevation={1}>\n              <ReceiptInputContainer />\n              <ResultPanelContainer />\n            </Paper> \n          }\n        </React.Fragment>\n      );\n    }\n\n  }\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './StoreManager';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App}  from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}